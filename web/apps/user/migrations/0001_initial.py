# Generated by Django 2.2 on 2019-05-16 03:54

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=50, verbose_name='邮箱')),
                ('nick', models.CharField(max_length=20, unique=True, verbose_name='昵称')),
                ('name', models.CharField(blank=True, max_length=15, verbose_name='姓名')),
                ('tel', models.CharField(db_index=True, max_length=15, unique=True, verbose_name='手机号码')),
                ('reg_ip', models.CharField(blank=True, max_length=15, verbose_name='注册IP')),
                ('login_ip', models.CharField(blank=True, max_length=15)),
                ('is_staff', models.BooleanField(default=False, verbose_name='是否内部人员')),
                ('is_active', models.BooleanField(default=True, verbose_name='有效账号')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='注册时间')),
                ('update_time', models.DateTimeField(auto_now=True, null=True)),
                ('msg_num', models.IntegerField(default=0, verbose_name='未读消息数')),
                ('sysmsg_num', models.IntegerField(default=0, verbose_name='未读的系统消息数')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户',
                'db_table': 'user',
            },
        ),
    ]
